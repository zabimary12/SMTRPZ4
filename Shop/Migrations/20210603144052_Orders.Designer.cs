// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shop.Date;

namespace Shop.Migrations
{
    [DbContext(typeof(AppDBContent))]
    [Migration("20210603144052_Orders")]
    partial class Orders
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Shop.Date.Models.Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descCategory");

                    b.Property<string>("nameCategory");

                    b.HasKey("id");

                    b.ToTable("category");
                });

            modelBuilder.Entity("Shop.Date.Models.Knife", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("available");

                    b.Property<int>("categoryID");

                    b.Property<string>("imgKnife");

                    b.Property<bool>("isFavorite");

                    b.Property<string>("longDisc");

                    b.Property<string>("nameKnife");

                    b.Property<int>("priceKnife");

                    b.Property<string>("shortDisc");

                    b.Property<string>("steal");

                    b.HasKey("id");

                    b.HasIndex("categoryID");

                    b.ToTable("knife");
                });

            modelBuilder.Entity("Shop.Date.Models.Order", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("adress");

                    b.Property<string>("email");

                    b.Property<string>("name");

                    b.Property<DateTime>("orderTime");

                    b.Property<string>("phone");

                    b.Property<string>("surename");

                    b.HasKey("id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Shop.Date.Models.OrderDetail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("adress");

                    b.Property<int?>("knifeid");

                    b.Property<int>("orderID");

                    b.Property<int>("price");

                    b.HasKey("id");

                    b.HasIndex("knifeid");

                    b.HasIndex("orderID");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("Shop.Date.Models.ShopCartItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ShopCartID");

                    b.Property<int?>("knifeid");

                    b.Property<int>("price");

                    b.HasKey("id");

                    b.HasIndex("knifeid");

                    b.ToTable("ShopCartItem");
                });

            modelBuilder.Entity("Shop.Date.Models.Knife", b =>
                {
                    b.HasOne("Shop.Date.Models.Category", "Category")
                        .WithMany("knivesList")
                        .HasForeignKey("categoryID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Shop.Date.Models.OrderDetail", b =>
                {
                    b.HasOne("Shop.Date.Models.Knife", "knife")
                        .WithMany()
                        .HasForeignKey("knifeid");

                    b.HasOne("Shop.Date.Models.Order", "order")
                        .WithMany("orderDetails")
                        .HasForeignKey("orderID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Shop.Date.Models.ShopCartItem", b =>
                {
                    b.HasOne("Shop.Date.Models.Knife", "knife")
                        .WithMany()
                        .HasForeignKey("knifeid");
                });
#pragma warning restore 612, 618
        }
    }
}
